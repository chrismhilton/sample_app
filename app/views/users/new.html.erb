<h1>Sign up</h1>

<!--
The presence of the do keyword indicates that form_for takes a block
which has one variable called f for 'form'.
In the first block, the form_for helper methods create the HTML needed
to make a labeled text field element for setting the name attribute of a User model;
including name attributes for each input that allow Rails to construct an
initialization hash (via the params variable) for creating users using the values entered by the user.
Requires a @user instance variable to be defined in the controller new action.
Rails creates the form tag using the @user object: because every Ruby object
knows its own class, Rails figures out that @user is of class User;
moreover, since @user is a new user, Rails knows to construct a form with the post method,
which is the proper verb for creating a new object.
The action="/users" and method="post" for elements constitute instructions
to issue an HTML POST request to the /users URL handled by the controller create action.
-->
<%= form_for(@user) do |f| %>

  <!-- render an error-messages partial -->
  <%= render 'shared/error_messages' %>

  <div class="field">
    <%= f.label :name %><br />
    <%= f.text_field :name %>
  </div>
  <div class="field">
    <%= f.label :email %><br />
    <%= f.text_field :email %>
  </div>
  <div class="field">
    <%= f.label :password %><br />
    <%= f.password_field :password %>
  </div>
  <div class="field">
    <%= f.label :password_confirmation, "Confirmation" %><br />
    <%= f.password_field :password_confirmation %>
  </div>
  <div class="actions">
    <%= f.submit "Sign up" %>
  </div>
<% end %>
